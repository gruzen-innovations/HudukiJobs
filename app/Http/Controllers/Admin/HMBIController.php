<?php

namespace App\Http\Controllers\Admin;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\BodyType;
use App\MaritalStatusList;
use App\AdvanceSkills;
use App\Height;
use DB;
use Session;
use File;
use App\Traits\Features;
class HMBIController extends Controller

{
     use Features;
     //height list
     public function test_resp(Request $request){


// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
$ch = curl_init();

curl_setopt($ch, CURLOPT_URL, 'https://api.emptra.com/panKyc/company');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, "{\n    \"pan\": \"AAFCI1307N\"\n}");

$headers = array();
$headers[] = 'Content-Type: application/json';
$headers[] = 'Clientid: e21888db4696ae29cf9b1b7c6424e4a6:95195fa04132f5a0bd7008d1ae837381';
$headers[] = 'Secretkey: 2p8GcNjGRbUPKFz9SRcMn8IJqwRmR1TXlxRR5qhRKC7C3BLdKQeO3ADdZvA90OseO';
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

$result = curl_exec($ch);
 $results = json_decode($result);
return $results->code;

if (curl_errno($ch)) {
    echo 'Error:' . curl_error($ch);
}
curl_close($ch);
     }
    public function index_height(){
       
         $height = Height::get();
         $features = $this->getfeatures();
        if(empty($features)){
           return redirect('MyDashboard')->with( 'error', "Something went wrong");
        }else{
        return view('templates.myadmin.height')->with(['heights' => $height,'allfeatures'=> $features]);
        }
    }



    public function add_height(){
        return view('templates.myadmin.add_height');
    }
    public function store_height(Request $request){
        $this->validate(
          $request, 
            [   
               'name' => 'required',

            ],
            [   
            'name.required' => 'Enter location',
            ]
        );

$pid = $request->get('name');
         $input=$request->all();
            $pids=array();
              $product_ids = explode(',',$pid);
               foreach($product_ids as $data1){
                        $pids[]=$data1;
                   }
                    $emailArray = $pids;
        $totalEmails = count($emailArray);
    for($i=0; $i<$totalEmails; $i++) {
        $heights= new Height();
        $data = $emailArray[$i];  
        $heights->location=$data;
        $heights->save();
    }
       
		
        return redirect('height')->with('success', 'Added Successfully');

    }

 public function edit_height($id)
    {
        $height = Height::where('_id','=',$id)->get();
        $features = $this->getfeatures();
       if(empty($features)){
           return redirect('MyDashboard')->with( 'error', "Something went wrong");
       }
       else{
          return view('templates.myadmin.edit_height')->with(['heights'=> $height, 'allfeatures' => $features]);
      }
}


    public function update_height(Request $request){
     $this->validate(
          $request, 
            [   
               'name' => 'required',
            ],
            [   
            'name.required' => 'Enter location',
            ]
        );

        $height = Height::find($request->get('id'));
      	$height->location = $request->input('name');
        $height->save();

        return redirect('height')->with('success', 'Updated Successfully');

    }

    public function delete_height($id)
    {

      $height = Height::find($id);
      $height->delete();
      return redirect('height')->with('success', 'Deleted Successfully');

    }
    //advance skills
       public function index_advance_skills(){
        $skills = AdvanceSkills::get();
        $features = $this->getfeatures();
        if(empty($features)){
           return redirect('MyDashboard')->with( 'error', "Something went wrong");
        }else{
        return view('templates.myadmin.adv_skills')->with(['skills' => $skills,'allfeatures'=> $features]);
       }
    }

    public function add_advance_skills(){
        return view('templates.myadmin.add_adv_skills');
    }

    public function store_advance_skills(Request $request){
        $this->validate(
          $request, 
            [   
               'name' => 'required',
            ],
            [   
            'name.required' => 'Enter location',
            ]
        );

$pid = $request->get('name');
         $input=$request->all();
            $pids=array();
              $product_ids = explode(',',$pid);
               foreach($product_ids as $data1){
                        $pids[]=$data1;
                   }
                    $emailArray = $pids;
        $totalEmails = count($emailArray);
    for($i=0; $i<$totalEmails; $i++) {
        $skil= new AdvanceSkills();
        $data = $emailArray[$i];  
        $skil->skills=$data;
        $skil->save();
    }
    

        return redirect('advance-skills')->with('success', 'Added Successfully');

    }

 public function edit_advance_skills($id)
    {
        $skill = AdvanceSkills::where('_id','=',$id)->get();
        $features = $this->getfeatures();
       if(empty($features)){
           return redirect('MyDashboard')->with( 'error', "Something went wrong");
       }else{
               return view('templates.myadmin.edit_adv_skills')->with(['skills'=> $skill, 'allfeatures' => $features]);
       }
}


    public function update_advance_skills(Request $request){

     $this->validate(
          $request, 
            [   
               'name' => 'required',
            ],
            [   
            'name.required' => 'Enter advance skills',
            ]
        );

        $skills = AdvanceSkills::find($request->get('id'));
      	$skills->skills = $request->input('name');
        $skills->save();

        return redirect('advance-skills')->with('success', 'Updated Successfully');

    }

public function delete_advance_skills($id)
{
      $skills = AdvanceSkills::find($id);
      $skills->delete();
      return redirect('advance-skills')->with('success', 'Deleted Successfully');

}

}